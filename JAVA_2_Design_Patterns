
<!DOCTYPE html>
<html lang="it">
	    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

	<head><title>Design Patterns</title></head>
<body>
	  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
<div class="container">    
<h1>Design Patterns</h1>

<h2>Immutable Objects</h2>

Problem: how do we create a read-only object tha can be shared and used by multiple classes?
Solution: The immutable object pattern is a creational pattern based on the idea of creating object whose state does not change after they are creatd and can be shared.

Since the state of an immutable object never change, they are inherently thread-safe.
Rules:
1. use a constructor to set all the properties of the object
2. mark all of the instance varaibles pivate and final
3. do not define any setter methods
4. do not allow referenced mutable object to be modified or accessed directly
5. prevent methods from being ovverriden-- class marked final

Ther first rule defines howe to create the immutable object, by passing the information to the constructor, so that all of the data is set upon creation.
The second and third rules are straightforward, as they stem from proper encapsulation. All references and primitive values contained in the object are set at creation and cannot be modified.
The fourth rule not allows to return to the user reference to mutable objects, e.g. List reference.
</div>
</body>